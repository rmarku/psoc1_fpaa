/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
// AnalogOutBuf_0 address and mask defines
#pragma	ioport	AnalogOutBuf_0_Data_ADDR:	0x0
BYTE			AnalogOutBuf_0_Data_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_0_ADDR:	0x100
BYTE			AnalogOutBuf_0_DriveMode_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_1_ADDR:	0x101
BYTE			AnalogOutBuf_0_DriveMode_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_DriveMode_2_ADDR:	0x3
BYTE			AnalogOutBuf_0_DriveMode_2_ADDR;
#pragma	ioport	AnalogOutBuf_0_GlobalSelect_ADDR:	0x2
BYTE			AnalogOutBuf_0_GlobalSelect_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_0_ADDR:	0x102
BYTE			AnalogOutBuf_0_IntCtrl_0_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntCtrl_1_ADDR:	0x103
BYTE			AnalogOutBuf_0_IntCtrl_1_ADDR;
#pragma	ioport	AnalogOutBuf_0_IntEn_ADDR:	0x1
BYTE			AnalogOutBuf_0_IntEn_ADDR;
#define AnalogOutBuf_0_MASK 0x8
// SPI_CLK address and mask defines
#pragma	ioport	SPI_CLK_Data_ADDR:	0x8
BYTE			SPI_CLK_Data_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_0_ADDR:	0x108
BYTE			SPI_CLK_DriveMode_0_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_1_ADDR:	0x109
BYTE			SPI_CLK_DriveMode_1_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_2_ADDR:	0xb
BYTE			SPI_CLK_DriveMode_2_ADDR;
#pragma	ioport	SPI_CLK_GlobalSelect_ADDR:	0xa
BYTE			SPI_CLK_GlobalSelect_ADDR;
#pragma	ioport	SPI_CLK_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_CLK_IntCtrl_0_ADDR;
#pragma	ioport	SPI_CLK_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_CLK_IntCtrl_1_ADDR;
#pragma	ioport	SPI_CLK_IntEn_ADDR:	0x9
BYTE			SPI_CLK_IntEn_ADDR;
#define SPI_CLK_MASK 0x1
// SPI_MOSI address and mask defines
#pragma	ioport	SPI_MOSI_Data_ADDR:	0x8
BYTE			SPI_MOSI_Data_ADDR;
#pragma	ioport	SPI_MOSI_DriveMode_0_ADDR:	0x108
BYTE			SPI_MOSI_DriveMode_0_ADDR;
#pragma	ioport	SPI_MOSI_DriveMode_1_ADDR:	0x109
BYTE			SPI_MOSI_DriveMode_1_ADDR;
#pragma	ioport	SPI_MOSI_DriveMode_2_ADDR:	0xb
BYTE			SPI_MOSI_DriveMode_2_ADDR;
#pragma	ioport	SPI_MOSI_GlobalSelect_ADDR:	0xa
BYTE			SPI_MOSI_GlobalSelect_ADDR;
#pragma	ioport	SPI_MOSI_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_MOSI_IntCtrl_0_ADDR;
#pragma	ioport	SPI_MOSI_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_MOSI_IntCtrl_1_ADDR;
#pragma	ioport	SPI_MOSI_IntEn_ADDR:	0x9
BYTE			SPI_MOSI_IntEn_ADDR;
#define SPI_MOSI_MASK 0x2
// SPI_CS address and mask defines
#pragma	ioport	SPI_CS_Data_ADDR:	0x8
BYTE			SPI_CS_Data_ADDR;
#pragma	ioport	SPI_CS_DriveMode_0_ADDR:	0x108
BYTE			SPI_CS_DriveMode_0_ADDR;
#pragma	ioport	SPI_CS_DriveMode_1_ADDR:	0x109
BYTE			SPI_CS_DriveMode_1_ADDR;
#pragma	ioport	SPI_CS_DriveMode_2_ADDR:	0xb
BYTE			SPI_CS_DriveMode_2_ADDR;
#pragma	ioport	SPI_CS_GlobalSelect_ADDR:	0xa
BYTE			SPI_CS_GlobalSelect_ADDR;
#pragma	ioport	SPI_CS_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_CS_IntCtrl_0_ADDR;
#pragma	ioport	SPI_CS_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_CS_IntCtrl_1_ADDR;
#pragma	ioport	SPI_CS_IntEn_ADDR:	0x9
BYTE			SPI_CS_IntEn_ADDR;
#define SPI_CS_MASK 0x4
// SPI_MISO address and mask defines
#pragma	ioport	SPI_MISO_Data_ADDR:	0x8
BYTE			SPI_MISO_Data_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_0_ADDR:	0x108
BYTE			SPI_MISO_DriveMode_0_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_1_ADDR:	0x109
BYTE			SPI_MISO_DriveMode_1_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_2_ADDR:	0xb
BYTE			SPI_MISO_DriveMode_2_ADDR;
#pragma	ioport	SPI_MISO_GlobalSelect_ADDR:	0xa
BYTE			SPI_MISO_GlobalSelect_ADDR;
#pragma	ioport	SPI_MISO_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_MISO_IntCtrl_0_ADDR;
#pragma	ioport	SPI_MISO_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_MISO_IntCtrl_1_ADDR;
#pragma	ioport	SPI_MISO_IntEn_ADDR:	0x9
BYTE			SPI_MISO_IntEn_ADDR;
#define SPI_MISO_MASK 0x10
