/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
// An_Out address and mask defines
#pragma	ioport	An_Out_Data_ADDR:	0x0
BYTE			An_Out_Data_ADDR;
#pragma	ioport	An_Out_DriveMode_0_ADDR:	0x100
BYTE			An_Out_DriveMode_0_ADDR;
#pragma	ioport	An_Out_DriveMode_1_ADDR:	0x101
BYTE			An_Out_DriveMode_1_ADDR;
#pragma	ioport	An_Out_DriveMode_2_ADDR:	0x3
BYTE			An_Out_DriveMode_2_ADDR;
#pragma	ioport	An_Out_GlobalSelect_ADDR:	0x2
BYTE			An_Out_GlobalSelect_ADDR;
#pragma	ioport	An_Out_IntCtrl_0_ADDR:	0x102
BYTE			An_Out_IntCtrl_0_ADDR;
#pragma	ioport	An_Out_IntCtrl_1_ADDR:	0x103
BYTE			An_Out_IntCtrl_1_ADDR;
#pragma	ioport	An_Out_IntEn_ADDR:	0x1
BYTE			An_Out_IntEn_ADDR;
#define An_Out_MASK 0x8
// SPI_CLK address and mask defines
#pragma	ioport	SPI_CLK_Data_ADDR:	0x8
BYTE			SPI_CLK_Data_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_0_ADDR:	0x108
BYTE			SPI_CLK_DriveMode_0_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_1_ADDR:	0x109
BYTE			SPI_CLK_DriveMode_1_ADDR;
#pragma	ioport	SPI_CLK_DriveMode_2_ADDR:	0xb
BYTE			SPI_CLK_DriveMode_2_ADDR;
#pragma	ioport	SPI_CLK_GlobalSelect_ADDR:	0xa
BYTE			SPI_CLK_GlobalSelect_ADDR;
#pragma	ioport	SPI_CLK_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_CLK_IntCtrl_0_ADDR;
#pragma	ioport	SPI_CLK_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_CLK_IntCtrl_1_ADDR;
#pragma	ioport	SPI_CLK_IntEn_ADDR:	0x9
BYTE			SPI_CLK_IntEn_ADDR;
#define SPI_CLK_MASK 0x1
// An_In address and mask defines
#pragma	ioport	An_In_Data_ADDR:	0x8
BYTE			An_In_Data_ADDR;
#pragma	ioport	An_In_DriveMode_0_ADDR:	0x108
BYTE			An_In_DriveMode_0_ADDR;
#pragma	ioport	An_In_DriveMode_1_ADDR:	0x109
BYTE			An_In_DriveMode_1_ADDR;
#pragma	ioport	An_In_DriveMode_2_ADDR:	0xb
BYTE			An_In_DriveMode_2_ADDR;
#pragma	ioport	An_In_GlobalSelect_ADDR:	0xa
BYTE			An_In_GlobalSelect_ADDR;
#pragma	ioport	An_In_IntCtrl_0_ADDR:	0x10a
BYTE			An_In_IntCtrl_0_ADDR;
#pragma	ioport	An_In_IntCtrl_1_ADDR:	0x10b
BYTE			An_In_IntCtrl_1_ADDR;
#pragma	ioport	An_In_IntEn_ADDR:	0x9
BYTE			An_In_IntEn_ADDR;
#define An_In_MASK 0x2
// SPI_CS address and mask defines
#pragma	ioport	SPI_CS_Data_ADDR:	0x8
BYTE			SPI_CS_Data_ADDR;
#pragma	ioport	SPI_CS_DriveMode_0_ADDR:	0x108
BYTE			SPI_CS_DriveMode_0_ADDR;
#pragma	ioport	SPI_CS_DriveMode_1_ADDR:	0x109
BYTE			SPI_CS_DriveMode_1_ADDR;
#pragma	ioport	SPI_CS_DriveMode_2_ADDR:	0xb
BYTE			SPI_CS_DriveMode_2_ADDR;
#pragma	ioport	SPI_CS_GlobalSelect_ADDR:	0xa
BYTE			SPI_CS_GlobalSelect_ADDR;
#pragma	ioport	SPI_CS_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_CS_IntCtrl_0_ADDR;
#pragma	ioport	SPI_CS_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_CS_IntCtrl_1_ADDR;
#pragma	ioport	SPI_CS_IntEn_ADDR:	0x9
BYTE			SPI_CS_IntEn_ADDR;
#define SPI_CS_MASK 0x4
// SPI_MISO address and mask defines
#pragma	ioport	SPI_MISO_Data_ADDR:	0x8
BYTE			SPI_MISO_Data_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_0_ADDR:	0x108
BYTE			SPI_MISO_DriveMode_0_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_1_ADDR:	0x109
BYTE			SPI_MISO_DriveMode_1_ADDR;
#pragma	ioport	SPI_MISO_DriveMode_2_ADDR:	0xb
BYTE			SPI_MISO_DriveMode_2_ADDR;
#pragma	ioport	SPI_MISO_GlobalSelect_ADDR:	0xa
BYTE			SPI_MISO_GlobalSelect_ADDR;
#pragma	ioport	SPI_MISO_IntCtrl_0_ADDR:	0x10a
BYTE			SPI_MISO_IntCtrl_0_ADDR;
#pragma	ioport	SPI_MISO_IntCtrl_1_ADDR:	0x10b
BYTE			SPI_MISO_IntCtrl_1_ADDR;
#pragma	ioport	SPI_MISO_IntEn_ADDR:	0x9
BYTE			SPI_MISO_IntEn_ADDR;
#define SPI_MISO_MASK 0x10
